{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devi\\\\Desktop\\\\MERN\\\\biddingweb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport Header from \"./Component/Header\";\nimport Footer from \"./Component/Footer\";\nimport Content from \"./Component/Content\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //all usestate and useeffect\n  const [bidpro, setpro] = useState([]);\n  const [sprostore, setcstore] = useState([]);\n  useEffect(() => {\n    getallpro();\n  }, []);\n\n  //get all product from DB\n  const getallpro = async () => {\n    const res = await axios.get(\"http://127.0.0.1:4000/activelis\");\n    // console.log(res.data.allproduct);\n    setpro(res.data.allproduct);\n  };\n\n  // serch category and display in frontend\n  const sprocat = async category => {\n    //console.log(category);\n    try {\n      const res = await axios.get(`http://127.0.0.1:4000/category/${category}`);\n      //console.log(res.data);\n      setcstore(res.data);\n    } catch (error) {\n      console.log(\"erroe in catproduct\");\n    }\n  };\n  console.log(sprostore);\n\n  //posting data from frontend to database\n  console.log(bidpro);\n  const insertToDB = async (products, file) => {\n    let formdata = new FormData();\n    formdata.append(\"file\", file);\n    const res = await axios.post(\"http://127.0.0.1:4000/create\", products);\n    console.log(res);\n    const res1 = await axios.post(\"http://127.0.0.1:4000/create/upload\", formdata);\n    getallpro();\n    alert(\"sucessfully added your product for bidding\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      pro: bidpro,\n      insertToDB: insertToDB,\n      sprocat: sprocat,\n      cproduct: sprostore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"9AJqMbtGURn15JGDnADYvXHmapE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","Header","Footer","Content","useEffect","useState","jsxDEV","_jsxDEV","App","_s","bidpro","setpro","sprostore","setcstore","getallpro","res","get","data","allproduct","sprocat","category","error","console","log","insertToDB","products","file","formdata","FormData","append","post","res1","alert","children","pro","cproduct","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/devi/Desktop/MERN/biddingweb/src/App.js"],"sourcesContent":["import axios from \"axios\"\r\nimport Header from \"./Component/Header\";\r\nimport Footer from \"./Component/Footer\";\r\nimport Content from \"./Component/Content\";\r\nimport { useEffect, useState } from \"react\";\r\nfunction App()\r\n{\r\n    //all usestate and useeffect\r\n    const [bidpro,setpro]=useState([])\r\n    const [sprostore,setcstore]=useState([])\r\n    useEffect(()=>{\r\n        getallpro();\r\n    },[])\r\n   \r\n\r\n    //get all product from DB\r\n    const getallpro=async()=>{\r\n        const res=await axios.get(\"http://127.0.0.1:4000/activelis\")\r\n       // console.log(res.data.allproduct);\r\n        setpro(res.data.allproduct);  \r\n    }\r\n   \r\n\r\n    // serch category and display in frontend\r\n    const sprocat=async (category)=>{\r\n        //console.log(category);\r\n        try{\r\n            const res=await axios.get(`http://127.0.0.1:4000/category/${category}`)\r\n            //console.log(res.data);\r\n            setcstore(res.data);\r\n        }\r\n        catch(error){\r\n            console.log(\"erroe in catproduct\")\r\n        }\r\n    }\r\n    console.log(sprostore);\r\n\r\n  \r\n    //posting data from frontend to database\r\n    console.log(bidpro)\r\n    const insertToDB=async (products,file)=>{\r\n        let formdata=new FormData();\r\n        formdata.append(\"file\",file)\r\n        const res=await axios.post(\"http://127.0.0.1:4000/create\",products)\r\n        console.log(res)\r\n        const res1=await axios.post(\"http://127.0.0.1:4000/create/upload\",formdata)\r\n        getallpro();\r\n        alert(\"sucessfully added your product for bidding\")\r\n    }\r\n    return(\r\n        <div>\r\n            <Header pro={bidpro} insertToDB={insertToDB} sprocat={sprocat} cproduct={sprostore}></Header>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,SAASC,GAAGA,CAAA,EACZ;EAAAC,EAAA;EACI;EACA,MAAM,CAACC,MAAM,EAACC,MAAM,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,SAAS,EAACC,SAAS,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACxCD,SAAS,CAAC,MAAI;IACVU,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;;EAGL;EACA,MAAMA,SAAS,GAAC,MAAAA,CAAA,KAAS;IACrB,MAAMC,GAAG,GAAC,MAAMf,KAAK,CAACgB,GAAG,CAAC,iCAAiC,CAAC;IAC7D;IACCL,MAAM,CAACI,GAAG,CAACE,IAAI,CAACC,UAAU,CAAC;EAC/B,CAAC;;EAGD;EACA,MAAMC,OAAO,GAAC,MAAOC,QAAQ,IAAG;IAC5B;IACA,IAAG;MACC,MAAML,GAAG,GAAC,MAAMf,KAAK,CAACgB,GAAG,CAAE,kCAAiCI,QAAS,EAAC,CAAC;MACvE;MACAP,SAAS,CAACE,GAAG,CAACE,IAAI,CAAC;IACvB,CAAC,CACD,OAAMI,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACtC;EACJ,CAAC;EACDD,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;;EAGtB;EACAU,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;EACnB,MAAMc,UAAU,GAAC,MAAAA,CAAOC,QAAQ,EAACC,IAAI,KAAG;IACpC,IAAIC,QAAQ,GAAC,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAACH,IAAI,CAAC;IAC5B,MAAMX,GAAG,GAAC,MAAMf,KAAK,CAAC8B,IAAI,CAAC,8BAA8B,EAACL,QAAQ,CAAC;IACnEH,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;IAChB,MAAMgB,IAAI,GAAC,MAAM/B,KAAK,CAAC8B,IAAI,CAAC,qCAAqC,EAACH,QAAQ,CAAC;IAC3Eb,SAAS,CAAC,CAAC;IACXkB,KAAK,CAAC,4CAA4C,CAAC;EACvD,CAAC;EACD,oBACIzB,OAAA;IAAA0B,QAAA,eACI1B,OAAA,CAACN,MAAM;MAACiC,GAAG,EAAExB,MAAO;MAACc,UAAU,EAAEA,UAAW;MAACL,OAAO,EAAEA,OAAQ;MAACgB,QAAQ,EAAEvB;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5F,CAAC;AAEd;AAAC9B,EAAA,CAlDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}