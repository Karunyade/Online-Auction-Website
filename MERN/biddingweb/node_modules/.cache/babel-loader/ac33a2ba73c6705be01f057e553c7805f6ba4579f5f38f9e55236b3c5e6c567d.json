{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devi\\\\Desktop\\\\MERN\\\\biddingweb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport Header from \"./Component/Header\";\nimport Footer from \"./Component/Footer\";\nimport Content from \"./Component/Content\";\nimport Category from \"./Component/Category\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //get all poduct from db and display\n  const [bidpro, setpro] = useState([]);\n  useEffect(() => {\n    getallpro();\n  }, []);\n  const getallpro = async () => {\n    const res = await axios.get(\"http://127.0.0.1:4000/activelis\");\n    console.log(res.data.allproduct);\n    setpro(res.data.allproduct);\n  };\n\n  // category\n  const [selectedCategory, setSelectedCategory] = useState('');\n  useEffect(() => {\n    if (selectedCategory) {\n      getallcat(selectedCategory);\n    }\n  }, [selectedCategory]);\n  const handleCategoryChange = async category => {\n    //setSelectedCategory(category);\n    const res = await axios.get(\"http://127.0.0.1:4000/\");\n    console.log(res.data.allproduct);\n    setpro(res.data.allproduct);\n  };\n\n  //posting data from frontend to database\n  console.log(bidpro);\n  const insertToDB = async products => {\n    const res = await axios.post(\"http://127.0.0.1:4000/create\", products);\n    console.log(res);\n    getallpro();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      pro: bidpro,\n      insertToDB: insertToDB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zZIkaXcUhkgHiREpcPjxEjZbFwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","Header","Footer","Content","Category","useEffect","useState","jsxDEV","_jsxDEV","App","_s","bidpro","setpro","getallpro","res","get","console","log","data","allproduct","selectedCategory","setSelectedCategory","getallcat","handleCategoryChange","category","insertToDB","products","post","children","pro","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/devi/Desktop/MERN/biddingweb/src/App.js"],"sourcesContent":["import axios from \"axios\"\r\nimport Header from \"./Component/Header\";\r\nimport Footer from \"./Component/Footer\";\r\nimport Content from \"./Component/Content\";\r\nimport Category from \"./Component/Category\";\r\nimport { useEffect, useState } from \"react\";\r\nfunction App()\r\n{\r\n    //get all poduct from db and display\r\n    const [bidpro,setpro]=useState([])\r\n    useEffect(()=>{\r\n        getallpro();\r\n    },[])\r\n    const getallpro=async()=>{\r\n        const res=await axios.get(\"http://127.0.0.1:4000/activelis\")\r\n        console.log(res.data.allproduct);\r\n        setpro(res.data.allproduct);  \r\n    }\r\n\r\n    // category\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    useEffect(() => {\r\n        if (selectedCategory) {\r\n            getallcat(selectedCategory);\r\n        }\r\n    }, [selectedCategory]);\r\n    const handleCategoryChange = async (category) => {\r\n        //setSelectedCategory(category);\r\n        const res=await axios.get(\"http://127.0.0.1:4000/\")\r\n        console.log(res.data.allproduct);\r\n        setpro(res.data.allproduct);  \r\n\r\n       \r\n    };\r\n\r\n    //posting data from frontend to database\r\n    console.log(bidpro)\r\n    const insertToDB=async (products)=>{\r\n        const res=await axios.post(\"http://127.0.0.1:4000/create\",products)\r\n        console.log(res)\r\n        getallpro();\r\n    }\r\n    return(\r\n        <div>\r\n            <Header pro={bidpro} insertToDB={insertToDB}></Header>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,SAASC,GAAGA,CAAA,EACZ;EAAAC,EAAA;EACI;EACA,MAAM,CAACC,MAAM,EAACC,MAAM,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAClCD,SAAS,CAAC,MAAI;IACVQ,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EACL,MAAMA,SAAS,GAAC,MAAAA,CAAA,KAAS;IACrB,MAAMC,GAAG,GAAC,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC;IAC5DC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAACC,UAAU,CAAC;IAChCP,MAAM,CAACE,GAAG,CAACI,IAAI,CAACC,UAAU,CAAC;EAC/B,CAAC;;EAED;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5DD,SAAS,CAAC,MAAM;IACZ,IAAIe,gBAAgB,EAAE;MAClBE,SAAS,CAACF,gBAAgB,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EACtB,MAAMG,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;IAC7C;IACA,MAAMV,GAAG,GAAC,MAAMd,KAAK,CAACe,GAAG,CAAC,wBAAwB,CAAC;IACnDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAACC,UAAU,CAAC;IAChCP,MAAM,CAACE,GAAG,CAACI,IAAI,CAACC,UAAU,CAAC;EAG/B,CAAC;;EAED;EACAH,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB,MAAMc,UAAU,GAAC,MAAOC,QAAQ,IAAG;IAC/B,MAAMZ,GAAG,GAAC,MAAMd,KAAK,CAAC2B,IAAI,CAAC,8BAA8B,EAACD,QAAQ,CAAC;IACnEV,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChBD,SAAS,CAAC,CAAC;EACf,CAAC;EACD,oBACIL,OAAA;IAAAoB,QAAA,eACIpB,OAAA,CAACP,MAAM;MAAC4B,GAAG,EAAElB,MAAO;MAACc,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErD,CAAC;AAEd;AAACvB,EAAA,CA1CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}