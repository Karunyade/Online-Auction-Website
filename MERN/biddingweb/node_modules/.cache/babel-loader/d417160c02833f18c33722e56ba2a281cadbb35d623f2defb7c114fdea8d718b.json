{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devi\\\\Desktop\\\\MERN\\\\biddingweb\\\\src\\\\Component\\\\Mybid.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mybid() {\n  _s();\n  //storing my bid in state\n  const [sbid, setSbid] = useState([]);\n  //for each state bid amount \n  const [bidamount, setBidamount] = useState(\"\");\n  const [mybid, setMyBid] = useState([]); // State to hold the response from placeBid\n\n  //fetching bidded product\n  useEffect(() => {\n    const userbid = async () => {\n      try {\n        const email = localStorage.getItem(\"email\");\n        const response = await axios.get(`http://127.0.0.1:4000/mybid/${email}`);\n        setSbid(response.data);\n        // Initialize mybid with the response data\n        setMyBid(response.data.map(item => ({\n          proId: item._id,\n          amount: item\n        })));\n      } catch (error) {\n        console.log(\"error in user mybid\");\n      }\n    };\n    userbid();\n  }, []);\n\n  // bidding\n  const placeBid = async proId => {\n    try {\n      const email = localStorage.getItem('email');\n      const currentBid = bidamount[proId];\n      //console.log(proId);\n      if (!isNaN(currentBid)) {\n        const res = await axios.patch(`http://127.0.0.1:4000/probid/${email}`, {\n          proId,\n          bidamount: currentBid\n        });\n        if (res.data.message === \"Invalid email\") {\n          alert(\"You posted this post so you cannot bid\");\n        } else if (res.data.message === \"Bid amount must be greater than current base bid\") {\n          alert(\"Bid amount must be greater than current base bid\");\n        } else if (res.data.message === \"Bid amount updated successfully\") {\n          // Update mybid state with the response from placeBid\n          console.log(res.data.ua);\n          alert(\"You Bidded for this product\");\n        }\n      } else {\n        alert(\"Please enter a valid number in the bid amount field.\");\n      }\n    } catch (error) {\n      console.log(\"error in placing bid:\", error);\n    }\n  };\n  console.table(mybid);\n  //for each product input field\n  const handleBidAmountChange = (proId, value) => {\n    setBidamount(prevState => ({\n      ...prevState,\n      [proId]: value // Update the bid amount for the corresponding product\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bid-container\",\n    children: sbid.length > 0 && sbid.map(s => {\n      var _mybid$find;\n      const myBidAmount = ((_mybid$find = mybid.find(item => item.proId === s._id)) === null || _mybid$find === void 0 ? void 0 : _mybid$find.amount) || 0;\n      const buttonClass = s.base_bid > myBidAmount ? \"btn btn-success\" : \"btn btn-danger\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://127.0.0.1:4000/${s.pimage}`,\n            alt: s.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Product Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 32\n            }, this), \" \", s.product_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 32\n            }, this), \" \", s.category_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Base Bidding:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 32\n            }, this), \" \", s.base_bid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"be\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Bidding End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 47\n            }, this), \" \", s.bid_end]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: buttonClass,\n            onClick: () => placeBid(s._id),\n            children: \"Place bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"ubid\",\n            type: \"text\",\n            placeholder: \"Enter Bid Amount\",\n            className: \"bid-input\",\n            value: bidamount[s._id] || \"\",\n            onChange: e => handleBidAmountChange(s._id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, s._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Mybid, \"Ryw8zPpuKb1uUU5ow5P4FRmqKD8=\");\n_c = Mybid;\nexport default Mybid;\nvar _c;\n$RefreshReg$(_c, \"Mybid\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Mybid","_s","sbid","setSbid","bidamount","setBidamount","mybid","setMyBid","userbid","email","localStorage","getItem","response","get","data","map","item","proId","_id","amount","error","console","log","placeBid","currentBid","isNaN","res","patch","message","alert","ua","table","handleBidAmountChange","value","prevState","className","children","length","s","_mybid$find","myBidAmount","find","buttonClass","base_bid","src","pimage","alt","product_name","fileName","_jsxFileName","lineNumber","columnNumber","category_name","bid_end","onClick","id","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/devi/Desktop/MERN/biddingweb/src/Component/Mybid.js"],"sourcesContent":["import { useState ,useEffect} from \"react\";\r\nimport axios from 'axios';\r\nfunction Mybid(){\r\n   \r\n    //storing my bid in state\r\n    const [sbid, setSbid] = useState([]);\r\n    //for each state bid amount \r\n    const [bidamount,setBidamount]=useState(\"\");\r\n    const [mybid, setMyBid] = useState([]); // State to hold the response from placeBid\r\n\r\n    //fetching bidded product\r\n   useEffect(()=>{\r\n    const userbid= async()=>{\r\n        try{\r\n            const email=localStorage.getItem(\"email\");\r\n            const response = await axios.get(`http://127.0.0.1:4000/mybid/${email}`);\r\n            setSbid(response.data);\r\n            // Initialize mybid with the response data\r\n            setMyBid(response.data.map(item => ({ proId: item._id, amount: item})));\r\n        }catch(error){\r\n            console.log(\"error in user mybid\")\r\n        }\r\n    };\r\n    userbid();\r\n   },[])\r\n\r\n\r\n// bidding\r\n   const placeBid = async (proId) => {\r\n    try {\r\n        const email = localStorage.getItem('email');\r\n        const currentBid = bidamount[proId];\r\n        //console.log(proId);\r\n        if (!isNaN(currentBid)) {\r\n            const res = await axios.patch(`http://127.0.0.1:4000/probid/${email}`, {\r\n                proId,\r\n                bidamount: currentBid\r\n            });\r\n            if (res.data.message === \"Invalid email\") {\r\n                alert(\"You posted this post so you cannot bid\");\r\n            } else if (res.data.message === \"Bid amount must be greater than current base bid\") {\r\n                alert(\"Bid amount must be greater than current base bid\");\r\n            } else if (res.data.message === \"Bid amount updated successfully\") {\r\n                 // Update mybid state with the response from placeBid\r\n                 console.log(res.data.ua)\r\n                alert(\"You Bidded for this product\");\r\n            }\r\n        } else {\r\n            alert(\"Please enter a valid number in the bid amount field.\");\r\n        }\r\n    } catch (error) {\r\n        console.log(\"error in placing bid:\", error);\r\n    }\r\n};\r\n\r\nconsole.table(mybid);\r\n//for each product input field\r\nconst handleBidAmountChange = (proId, value) => {\r\n    setBidamount(prevState => ({\r\n        ...prevState,\r\n        [proId]: value // Update the bid amount for the corresponding product\r\n    }));\r\n  };\r\n\r\n    return(\r\n        <div className=\"bid-container\">\r\n            {sbid.length > 0 && sbid.map((s) => {\r\n                const myBidAmount = mybid.find(item => item.proId === s._id)?.amount || 0;\r\n                const buttonClass = s.base_bid > myBidAmount ? \"btn btn-success\" : \"btn btn-danger\";\r\n                return (\r\n                    <div className=\"bid-item\" key={s._id}>\r\n                        <div className=\"image-container\">\r\n                            <img src={`http://127.0.0.1:4000/${s.pimage}`} alt={s.product_name} />\r\n                        </div>\r\n                        <div className=\"details-container\">\r\n                            <p><b>Product Name:</b> {s.product_name}</p>\r\n                            <p><b>Category:</b> {s.category_name}</p>\r\n                            <p><b>Base Bidding:</b> {s.base_bid}</p>\r\n                            <p className=\"be\"><b>Bidding End Date:</b> {s.bid_end}</p>\r\n\r\n                            <button className={buttonClass} onClick={() => placeBid(s._id)}>Place bid</button>\r\n\r\n                            <input id=\"ubid\" type=\"text\" placeholder=\"Enter Bid Amount\"\r\n                                className=\"bid-input\" value={bidamount[s._id] || \"\"}\r\n                                onChange={(e) => handleBidAmountChange(s._id, e.target.value)} />\r\n\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default Mybid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}