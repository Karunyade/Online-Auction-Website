{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devi\\\\Desktop\\\\MERN\\\\biddingweb\\\\src\\\\Component\\\\Mybid.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Mybid() {\n  _s();\n  //storing my bid in state\n  const [sbid, setSbid] = useState([]);\n  //for each state bid amount \n  const [bidamount, setBidamount] = useState({});\n  const [mybid, setMyBid] = useState([]); // State to hold the response from placeBid\n\n  //fetching bidded product\n  useEffect(() => {\n    const userbid = async () => {\n      try {\n        const email = localStorage.getItem(\"email\");\n        const response = await axios.get(`http://127.0.0.1:4000/mybid/${email}`);\n        setSbid(response.data);\n      } catch (error) {\n        console.log(\"error in user mybid\");\n      }\n    };\n    userbid();\n  }, []);\n\n  //fetching user my bid to dispaly button\n  useEffect(() => {\n    const mbid = async () => {\n      try {\n        const email = localStorage.getItem(\"email\");\n        console.log(email);\n        const response = await axios.get(`http://127.0.0.1:4000/mbid/${email}`);\n        setMyBid(response.data.mbid.map(item => ({\n          proId: item.proId,\n          amount: item.amount\n        })));\n      } catch (error) {\n        console.log(\"error in  getting user mybid \");\n      }\n    };\n    mbid();\n  }, []);\n  console.log(`${JSON.stringify(mybid)} mybid`);\n  // bidding\n  const placeBid = async proId => {\n    try {\n      const email = localStorage.getItem('email');\n      const currentBid = bidamount[proId];\n      //console.log(proId);\n      if (!isNaN(currentBid)) {\n        const res = await axios.patch(`http://127.0.0.1:4000/probid/${email}`, {\n          proId,\n          bidamount: currentBid\n        });\n        if (res.data.message === \"Invalid email\") {\n          alert(\"You posted this post so you cannot bid\");\n        } else if (res.data.message === \"Bid amount must be greater than current base bid\") {\n          alert(\"Bid amount must be greater than current base bid\");\n        } else if (res.data.message === \"Bid amount updated successfully\") {\n          alert(\"You Bidded for this product\");\n        }\n      } else {\n        alert(\"Please enter a valid number in the bid amount field.\");\n      }\n    } catch (error) {\n      console.log(\"error in placing bid:\", error);\n    }\n  };\n\n  //for each product input field\n  const handleBidAmountChange = (proId, value) => {\n    setBidamount(prevState => ({\n      ...prevState,\n      [proId]: value // Update the bid amount for the corresponding product\n    }));\n  };\n  const checkBidConditions = s => {\n    return new Date() > new Date(s.bid_end) && s.userbid.email === localStorage.getItem('email');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bid-container\",\n    children: sbid.length > 0 && sbid.map(s => {\n      const myBidAmountObj = mybid.find(item => item.proId === s._id);\n      const myBidAmount = myBidAmountObj ? myBidAmountObj.amount : 0;\n      const buttonClass = s.base_bid > myBidAmount ? \"btn btn-danger\" : \"btn btn-success\";\n      const isBidConditionMet = checkBidConditions(s);\n      console.log(s.user);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://127.0.0.1:4000/${s.pimage}`,\n            alt: s.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Product Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 32\n            }, this), \" \", s.product_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 32\n            }, this), \" \", s.category_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Base Bidding:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 32\n            }, this), \" \", s.base_bid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"be\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Bidding End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 47\n            }, this), \" \", s.bid_end]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"MY last bid:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 32\n            }, this), myBidAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), isBidConditionMet ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            disabled: true,\n            children: \"You won the bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: buttonClass,\n              onClick: () => placeBid(s._id),\n              children: s.base_bid > myBidAmount ? \"Place bid\" : \"Safe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ubid\",\n              type: \"text\",\n              placeholder: \"Enter Bid Amount\",\n              className: \"bid-input\",\n              value: bidamount[s._id] || \"\",\n              onChange: e => handleBidAmountChange(s._id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, s._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n}\n_s(Mybid, \"OXvjOOK+FJKXbg9AdrP4Ulp8Has=\");\n_c = Mybid;\nexport default Mybid;\nvar _c;\n$RefreshReg$(_c, \"Mybid\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Mybid","_s","sbid","setSbid","bidamount","setBidamount","mybid","setMyBid","userbid","email","localStorage","getItem","response","get","data","error","console","log","mbid","map","item","proId","amount","JSON","stringify","placeBid","currentBid","isNaN","res","patch","message","alert","handleBidAmountChange","value","prevState","checkBidConditions","s","Date","bid_end","className","children","length","myBidAmountObj","find","_id","myBidAmount","buttonClass","base_bid","isBidConditionMet","user","src","pimage","alt","product_name","fileName","_jsxFileName","lineNumber","columnNumber","category_name","disabled","onClick","id","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/devi/Desktop/MERN/biddingweb/src/Component/Mybid.js"],"sourcesContent":["import { useState ,useEffect} from \"react\";\r\nimport axios from 'axios';\r\nfunction Mybid(){\r\n   \r\n    //storing my bid in state\r\n    const [sbid, setSbid] = useState([]);\r\n    //for each state bid amount \r\n    const [bidamount,setBidamount]=useState({});\r\n    const [mybid, setMyBid] = useState([]); // State to hold the response from placeBid\r\n  \r\n\r\n\r\n    //fetching bidded product\r\n   useEffect(()=>{\r\n    const userbid= async()=>{\r\n        try{\r\n            const email=localStorage.getItem(\"email\");\r\n            const response = await axios.get(`http://127.0.0.1:4000/mybid/${email}`);\r\n            setSbid(response.data);\r\n        }catch(error){\r\n            console.log(\"error in user mybid\")\r\n        }\r\n    };\r\n    userbid();\r\n   },[])\r\n    \r\n//fetching user my bid to dispaly button\r\n   useEffect(()=>{\r\n    const mbid=async()=>{\r\n     try{\r\n       const email=localStorage.getItem(\"email\");\r\n       console.log(email)\r\n       const response= await axios.get(`http://127.0.0.1:4000/mbid/${email}`)\r\n       setMyBid(response.data.mbid.map(item => ({ proId: item.proId, amount: item.amount })));\r\n     }catch(error)\r\n     {\r\n      console.log(\"error in  getting user mybid \")\r\n     }\r\n }\r\n mbid();\r\n    },[])\r\n    \r\n    \r\n    console.log(`${JSON.stringify(mybid)} mybid`); \r\n// bidding\r\n   const placeBid = async (proId) => {\r\n    try {\r\n        const email = localStorage.getItem('email');\r\n        const currentBid = bidamount[proId];\r\n        //console.log(proId);\r\n        if (!isNaN(currentBid)) {\r\n            const res = await axios.patch(`http://127.0.0.1:4000/probid/${email}`, {\r\n                proId,\r\n                bidamount: currentBid\r\n            });\r\n            if (res.data.message === \"Invalid email\") {\r\n                alert(\"You posted this post so you cannot bid\");\r\n            } else if (res.data.message === \"Bid amount must be greater than current base bid\") {\r\n                alert(\"Bid amount must be greater than current base bid\");\r\n            } else if (res.data.message === \"Bid amount updated successfully\") {\r\n                alert(\"You Bidded for this product\");\r\n            }\r\n        } else {\r\n            alert(\"Please enter a valid number in the bid amount field.\");\r\n        }\r\n    } catch (error) {\r\n        console.log(\"error in placing bid:\", error);\r\n    }\r\n};\r\n\r\n\r\n\r\n//for each product input field\r\nconst handleBidAmountChange = (proId, value) => {\r\n    setBidamount(prevState => ({\r\n        ...prevState,\r\n        [proId]: value // Update the bid amount for the corresponding product\r\n    }));\r\n  };\r\n\r\nconst checkBidConditions = (s) => {\r\n    return new Date() > new Date(s.bid_end) && s.userbid.email === localStorage.getItem('email');\r\n};\r\n\r\n    return(\r\n         <div className=\"bid-container\">\r\n            {sbid.length > 0 && sbid.map((s) => {\r\n                const myBidAmountObj = mybid.find(item => item.proId === s._id);\r\n                const myBidAmount = myBidAmountObj ? myBidAmountObj.amount : 0;  \r\n                const buttonClass = s.base_bid > myBidAmount ? \"btn btn-danger\":\"btn btn-success\" ;  \r\n                const isBidConditionMet = checkBidConditions(s);\r\n                console.log(s.user)\r\n\r\n                return (\r\n                    <div className=\"bid-item\" key={s._id}>\r\n                        <div className=\"image-container\">\r\n                            <img src={`http://127.0.0.1:4000/${s.pimage}`} alt={s.product_name} />\r\n                        </div>\r\n                        <div className=\"details-container\">\r\n                            <p><b>Product Name:</b> {s.product_name}</p>\r\n                            <p><b>Category:</b> {s.category_name}</p>\r\n                            <p><b>Base Bidding:</b> {s.base_bid}</p>\r\n                            <p className=\"be\"><b>Bidding End Date:</b> {s.bid_end}</p>\r\n                            <p><b>MY last bid:</b>{myBidAmount}</p>\r\n                            {isBidConditionMet ? (\r\n                                <button className=\"btn btn-primary\" disabled>You won the bid</button>\r\n                            ) : (\r\n                                <>\r\n                                    <button className={buttonClass} onClick={() => placeBid(s._id)}>\r\n                                        {s.base_bid > myBidAmount ? \"Place bid\" : \"Safe\"}\r\n                                    </button>\r\n                                    <input id=\"ubid\" type=\"text\" placeholder=\"Enter Bid Amount\"\r\n                                        className=\"bid-input\" value={bidamount[s._id] || \"\"}\r\n                                        onChange={(e) => handleBidAmountChange(s._id, e.target.value)} />\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default Mybid;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1B,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAEZ;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAM,CAACW,SAAS,EAACC,YAAY,CAAC,GAACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAIxC;EACDC,SAAS,CAAC,MAAI;IACb,MAAMc,OAAO,GAAE,MAAAA,CAAA,KAAS;MACpB,IAAG;QACC,MAAMC,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACzC,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,+BAA8BJ,KAAM,EAAC,CAAC;QACxEN,OAAO,CAACS,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,QAAMC,KAAK,EAAC;QACTC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACtC;IACJ,CAAC;IACDT,OAAO,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;;EAER;EACGd,SAAS,CAAC,MAAI;IACb,MAAMwB,IAAI,GAAC,MAAAA,CAAA,KAAS;MACnB,IAAG;QACD,MAAMT,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACzCK,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;QAClB,MAAMG,QAAQ,GAAE,MAAMjB,KAAK,CAACkB,GAAG,CAAE,8BAA6BJ,KAAM,EAAC,CAAC;QACtEF,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAACI,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;UAAEC,KAAK,EAAED,IAAI,CAACC,KAAK;UAAEC,MAAM,EAAEF,IAAI,CAACE;QAAO,CAAC,CAAC,CAAC,CAAC;MACxF,CAAC,QAAMP,KAAK,EACZ;QACCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC7C;IACJ,CAAC;IACDC,IAAI,CAAC,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;EAGLF,OAAO,CAACC,GAAG,CAAE,GAAEM,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAE,QAAO,CAAC;EACjD;EACG,MAAMmB,QAAQ,GAAG,MAAOJ,KAAK,IAAK;IACjC,IAAI;MACA,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMe,UAAU,GAAGtB,SAAS,CAACiB,KAAK,CAAC;MACnC;MACA,IAAI,CAACM,KAAK,CAACD,UAAU,CAAC,EAAE;QACpB,MAAME,GAAG,GAAG,MAAMjC,KAAK,CAACkC,KAAK,CAAE,gCAA+BpB,KAAM,EAAC,EAAE;UACnEY,KAAK;UACLjB,SAAS,EAAEsB;QACf,CAAC,CAAC;QACF,IAAIE,GAAG,CAACd,IAAI,CAACgB,OAAO,KAAK,eAAe,EAAE;UACtCC,KAAK,CAAC,wCAAwC,CAAC;QACnD,CAAC,MAAM,IAAIH,GAAG,CAACd,IAAI,CAACgB,OAAO,KAAK,kDAAkD,EAAE;UAChFC,KAAK,CAAC,kDAAkD,CAAC;QAC7D,CAAC,MAAM,IAAIH,GAAG,CAACd,IAAI,CAACgB,OAAO,KAAK,iCAAiC,EAAE;UAC/DC,KAAK,CAAC,6BAA6B,CAAC;QACxC;MACJ,CAAC,MAAM;QACHA,KAAK,CAAC,sDAAsD,CAAC;MACjE;IACJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC;IAC/C;EACJ,CAAC;;EAID;EACA,MAAMiB,qBAAqB,GAAGA,CAACX,KAAK,EAAEY,KAAK,KAAK;IAC5C5B,YAAY,CAAC6B,SAAS,KAAK;MACvB,GAAGA,SAAS;MACZ,CAACb,KAAK,GAAGY,KAAK,CAAC;IACnB,CAAC,CAAC,CAAC;EACL,CAAC;EAEH,MAAME,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,OAAO,IAAIC,IAAI,CAAC,CAAC,GAAG,IAAIA,IAAI,CAACD,CAAC,CAACE,OAAO,CAAC,IAAIF,CAAC,CAAC5B,OAAO,CAACC,KAAK,KAAKC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChG,CAAC;EAEG,oBACKd,OAAA;IAAK0C,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC1BtC,IAAI,CAACuC,MAAM,GAAG,CAAC,IAAIvC,IAAI,CAACiB,GAAG,CAAEiB,CAAC,IAAK;MAChC,MAAMM,cAAc,GAAGpC,KAAK,CAACqC,IAAI,CAACvB,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKe,CAAC,CAACQ,GAAG,CAAC;MAC/D,MAAMC,WAAW,GAAGH,cAAc,GAAGA,cAAc,CAACpB,MAAM,GAAG,CAAC;MAC9D,MAAMwB,WAAW,GAAGV,CAAC,CAACW,QAAQ,GAAGF,WAAW,GAAG,gBAAgB,GAAC,iBAAiB;MACjF,MAAMG,iBAAiB,GAAGb,kBAAkB,CAACC,CAAC,CAAC;MAC/CpB,OAAO,CAACC,GAAG,CAACmB,CAAC,CAACa,IAAI,CAAC;MAEnB,oBACIpD,OAAA;QAAK0C,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACrB3C,OAAA;UAAK0C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC5B3C,OAAA;YAAKqD,GAAG,EAAG,yBAAwBd,CAAC,CAACe,MAAO,EAAE;YAACC,GAAG,EAAEhB,CAAC,CAACiB;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,eACN5D,OAAA;UAAK0C,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC9B3C,OAAA;YAAA2C,QAAA,gBAAG3C,OAAA;cAAA2C,QAAA,EAAG;YAAa;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACrB,CAAC,CAACiB,YAAY;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5C5D,OAAA;YAAA2C,QAAA,gBAAG3C,OAAA;cAAA2C,QAAA,EAAG;YAAS;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACrB,CAAC,CAACsB,aAAa;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzC5D,OAAA;YAAA2C,QAAA,gBAAG3C,OAAA;cAAA2C,QAAA,EAAG;YAAa;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACrB,CAAC,CAACW,QAAQ;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxC5D,OAAA;YAAG0C,SAAS,EAAC,IAAI;YAAAC,QAAA,gBAAC3C,OAAA;cAAA2C,QAAA,EAAG;YAAiB;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACrB,CAAC,CAACE,OAAO;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1D5D,OAAA;YAAA2C,QAAA,gBAAG3C,OAAA;cAAA2C,QAAA,EAAG;YAAY;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAACZ,WAAW;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtCT,iBAAiB,gBACdnD,OAAA;YAAQ0C,SAAS,EAAC,iBAAiB;YAACoB,QAAQ;YAAAnB,QAAA,EAAC;UAAe;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAErE5D,OAAA,CAAAE,SAAA;YAAAyC,QAAA,gBACI3C,OAAA;cAAQ0C,SAAS,EAAEO,WAAY;cAACc,OAAO,EAAEA,CAAA,KAAMnC,QAAQ,CAACW,CAAC,CAACQ,GAAG,CAAE;cAAAJ,QAAA,EAC1DJ,CAAC,CAACW,QAAQ,GAAGF,WAAW,GAAG,WAAW,GAAG;YAAM;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CAAC,eACT5D,OAAA;cAAOgE,EAAE,EAAC,MAAM;cAACC,IAAI,EAAC,MAAM;cAACC,WAAW,EAAC,kBAAkB;cACvDxB,SAAS,EAAC,WAAW;cAACN,KAAK,EAAE7B,SAAS,CAACgC,CAAC,CAACQ,GAAG,CAAC,IAAI,EAAG;cACpDoB,QAAQ,EAAGC,CAAC,IAAKjC,qBAAqB,CAACI,CAAC,CAACQ,GAAG,EAAEqB,CAAC,CAACC,MAAM,CAACjC,KAAK;YAAE;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,eACvE,CACL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAtBqBrB,CAAC,CAACQ,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuB/B,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGd;AAACxD,EAAA,CAzHQD,KAAK;AAAAmE,EAAA,GAALnE,KAAK;AA0Hd,eAAeA,KAAK;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}