{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devi\\\\Desktop\\\\MERN\\\\biddingweb\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport Header from \"./Component/Header\";\nimport Footer from \"./Component/Footer\";\nimport Content from \"./Component/Content\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //get all poduct from db and display\n  const [bidpro, setpro] = useState([]);\n  useEffect(() => {\n    getallpro();\n  }, []);\n  const getallpro = async () => {\n    const res = await axios.get(\"http://127.0.0.1:4000/activelis\");\n    console.log(res.data.allproduct);\n    setpro(res.data.allproduct);\n  };\n\n  // search category product in DB and display\n  const [scatpro, setcpro] = useState([]);\n  const sprocat = async category => {\n    setcpro(category);\n    const res = await axios.get();\n  };\n\n  //posting data from frontend to database\n  console.log(bidpro);\n  const insertToDB = async (products, file) => {\n    let formdata = new FormData();\n    formdata.append(\"file\", file);\n    const res = await axios.post(\"http://127.0.0.1:4000/create\", products);\n    console.log(res);\n    const res1 = await axios.post(\"http://127.0.0.1:4000/create/upload\", formdata);\n    getallpro();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      pro: bidpro,\n      insertToDB: insertToDB,\n      sprocat: sprocat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dRiEDjxYVJUEZIcOQyaiMDpZiPU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","Header","Footer","Content","useEffect","useState","jsxDEV","_jsxDEV","App","_s","bidpro","setpro","getallpro","res","get","console","log","data","allproduct","scatpro","setcpro","sprocat","category","insertToDB","products","file","formdata","FormData","append","post","res1","children","pro","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/devi/Desktop/MERN/biddingweb/src/App.js"],"sourcesContent":["import axios from \"axios\"\r\nimport Header from \"./Component/Header\";\r\nimport Footer from \"./Component/Footer\";\r\nimport Content from \"./Component/Content\";\r\nimport { useEffect, useState } from \"react\";\r\nfunction App()\r\n{\r\n    //get all poduct from db and display\r\n    const [bidpro,setpro]=useState([])\r\n    useEffect(()=>{\r\n        getallpro();\r\n    },[])\r\n    const getallpro=async()=>{\r\n        const res=await axios.get(\"http://127.0.0.1:4000/activelis\")\r\n        console.log(res.data.allproduct);\r\n        setpro(res.data.allproduct);  \r\n    }\r\n   \r\n    // search category product in DB and display\r\n    const [scatpro,setcpro]=useState([])\r\n    const sprocat=async (category)=>{\r\n        setcpro(category);\r\n        const res=await axios.get()\r\n    }\r\n  \r\n    //posting data from frontend to database\r\n    console.log(bidpro)\r\n    const insertToDB=async (products,file)=>{\r\n        let formdata=new FormData();\r\n        formdata.append(\"file\",file)\r\n        const res=await axios.post(\"http://127.0.0.1:4000/create\",products)\r\n        console.log(res)\r\n        const res1=await axios.post(\"http://127.0.0.1:4000/create/upload\",formdata)\r\n        getallpro();\r\n    }\r\n    return(\r\n        <div>\r\n            <Header pro={bidpro} insertToDB={insertToDB} sprocat={sprocat}></Header>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,SAASC,GAAGA,CAAA,EACZ;EAAAC,EAAA;EACI;EACA,MAAM,CAACC,MAAM,EAACC,MAAM,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAClCD,SAAS,CAAC,MAAI;IACVQ,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EACL,MAAMA,SAAS,GAAC,MAAAA,CAAA,KAAS;IACrB,MAAMC,GAAG,GAAC,MAAMb,KAAK,CAACc,GAAG,CAAC,iCAAiC,CAAC;IAC5DC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAACC,UAAU,CAAC;IAChCP,MAAM,CAACE,GAAG,CAACI,IAAI,CAACC,UAAU,CAAC;EAC/B,CAAC;;EAED;EACA,MAAM,CAACC,OAAO,EAACC,OAAO,CAAC,GAACf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMgB,OAAO,GAAC,MAAOC,QAAQ,IAAG;IAC5BF,OAAO,CAACE,QAAQ,CAAC;IACjB,MAAMT,GAAG,GAAC,MAAMb,KAAK,CAACc,GAAG,CAAC,CAAC;EAC/B,CAAC;;EAED;EACAC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB,MAAMa,UAAU,GAAC,MAAAA,CAAOC,QAAQ,EAACC,IAAI,KAAG;IACpC,IAAIC,QAAQ,GAAC,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAACH,IAAI,CAAC;IAC5B,MAAMZ,GAAG,GAAC,MAAMb,KAAK,CAAC6B,IAAI,CAAC,8BAA8B,EAACL,QAAQ,CAAC;IACnET,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,MAAMiB,IAAI,GAAC,MAAM9B,KAAK,CAAC6B,IAAI,CAAC,qCAAqC,EAACH,QAAQ,CAAC;IAC3Ed,SAAS,CAAC,CAAC;EACf,CAAC;EACD,oBACIL,OAAA;IAAAwB,QAAA,eACIxB,OAAA,CAACN,MAAM;MAAC+B,GAAG,EAAEtB,MAAO;MAACa,UAAU,EAAEA,UAAW;MAACF,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvE,CAAC;AAEd;AAAC3B,EAAA,CApCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}